{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saurav\\\\Desktop\\\\git projects\\\\react-movie-descript\\\\src\\\\views\\\\SearchView.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../App.css';\nimport MiniMovieDes from '../components/MiniMovieDes';\nimport SearchFetcher from '../hooks/SearchFetcher';\nimport ChangePageLinks from '../components/ChangePageLinks';\n\nfunction SearchView(match) {\n  var page_no = match.match.params.pg_no;\n  var search_keyword = match.match.params.keywords;\n\n  function refreshPage() {\n    window.location.reload();\n  }\n\n  const url = `http://www.omdbapi.com/?apikey=59ecd04c&s=${search_keyword}&page=${page_no}`;\n  const movies = SearchFetcher(url); //handling error of having to many movies sent\n\n  if (movies == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, \"Please enter a descriptive keyword to search\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"go to search again\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 55\n      }\n    }), \"or \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: refreshPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }\n    }, \"Reload\"));\n  }\n\n  ;\n  let prev_page_no = page_no - 1;\n\n  if (prev_page_no === 0) {\n    prev_page_no = 1;\n  }\n\n  ;\n  let next_page_no = parseInt(page_no) + 1;\n  let prev_page_path = \"/Search/keyword=\" + search_keyword + \"/page=\" + prev_page_no;\n  let next_page_path = \"/Search/keyword=\" + search_keyword + \"/page=\" + next_page_no;\n  return (\n    /*#__PURE__*/\n    //getting the search result\n    React.createElement(\"div\", {\n      className: \"home-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ChangePageLinks, {\n      prev_path: prev_page_path,\n      next_path: next_page_path,\n      page: page_no,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, movies.map(movie => /*#__PURE__*/React.createElement(MiniMovieDes, {\n      key: movie.imdbID,\n      data: movie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 36\n      }\n    }))), /*#__PURE__*/React.createElement(ChangePageLinks, {\n      prev_path: prev_page_path,\n      next_path: next_page_path,\n      page: page_no,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }))\n  );\n}\n\n;\nexport default SearchView;","map":{"version":3,"sources":["C:/Users/Saurav/Desktop/git projects/react-movie-descript/src/views/SearchView.js"],"names":["React","Link","MiniMovieDes","SearchFetcher","ChangePageLinks","SearchView","match","page_no","params","pg_no","search_keyword","keywords","refreshPage","window","location","reload","url","movies","prev_page_no","next_page_no","parseInt","prev_page_path","next_page_path","map","movie","imdbID"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,YAAP;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,MAAIC,OAAO,GAACD,KAAK,CAACA,KAAN,CAAYE,MAAZ,CAAmBC,KAA/B;AACA,MAAIC,cAAc,GAACJ,KAAK,CAACA,KAAN,CAAYE,MAAZ,CAAmBG,QAAtC;;AACA,WAASC,WAAT,GAAsB;AAClBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;;AACD,QAAMC,GAAG,GAAE,6CAA4CN,cAAe,SAAQH,OAAQ,EAAtF;AACA,QAAMU,MAAM,GAACd,aAAa,CAACa,GAAD,CAA1B,CAPuB,CAQvB;;AACA,MAAGC,MAAM,IAAE,IAAX,EAAgB;AACZ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEACgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhD,eAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,eAE0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF1C,sBAGO;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEL,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHP,CADJ;AAOH;;AAAA;AACD,MAAIM,YAAY,GAACX,OAAO,GAAC,CAAzB;;AACA,MAAGW,YAAY,KAAG,CAAlB,EAAoB;AAChBA,IAAAA,YAAY,GAAC,CAAb;AACH;;AAAA;AACD,MAAIC,YAAY,GAACC,QAAQ,CAACb,OAAD,CAAR,GAAkB,CAAnC;AACA,MAAIc,cAAc,GAAC,qBAAmBX,cAAnB,GAAkC,QAAlC,GAA2CQ,YAA9D;AACA,MAAII,cAAc,GAAC,qBAAmBZ,cAAnB,GAAkC,QAAlC,GAA2CS,YAA9D;AACA;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAEE,cAA5B;AAA4C,MAAA,SAAS,EAAEC,cAAvD;AAAuE,MAAA,IAAI,EAAEf,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKU,MAAM,CAACM,GAAP,CAAWC,KAAK,iBAAE,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,KAAK,CAACC,MAAzB;AAAiC,MAAA,IAAI,EAAED,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CADL,CAFJ,eAKI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,cAA5B;AAA4C,MAAA,SAAS,EAAEC,cAAvD;AAAuE,MAAA,IAAI,EAAEf,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ;AAFJ;AAUH;;AAAA;AAED,eAAeF,UAAf","sourcesContent":["import React  from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport '../App.css';\r\nimport MiniMovieDes from '../components/MiniMovieDes'\r\nimport SearchFetcher from '../hooks/SearchFetcher'\r\nimport ChangePageLinks from '../components/ChangePageLinks'\r\n\r\nfunction SearchView(match) {\r\n    var page_no=match.match.params.pg_no;\r\n    var search_keyword=match.match.params.keywords;\r\n    function refreshPage(){ \r\n        window.location.reload(); \r\n    }\r\n    const url=`http://www.omdbapi.com/?apikey=59ecd04c&s=${search_keyword}&page=${page_no}`;\r\n    const movies=SearchFetcher(url);\r\n    //handling error of having to many movies sent\r\n    if(movies==null){\r\n        return(\r\n            <div className=\"home-page\">\r\n                Please enter a descriptive keyword to search<br></br>\r\n                <Link to='/'>go to search again</Link><br></br>\r\n                or <button type=\"button\" onClick={refreshPage}>Reload</button>\r\n            </div>\r\n        )\r\n    };\r\n    let prev_page_no=page_no-1;\r\n    if(prev_page_no===0){\r\n        prev_page_no=1;\r\n    };\r\n    let next_page_no=parseInt(page_no)+1;\r\n    let prev_page_path=\"/Search/keyword=\"+search_keyword+\"/page=\"+prev_page_no;\r\n    let next_page_path=\"/Search/keyword=\"+search_keyword+\"/page=\"+next_page_no;\r\n    return (\r\n        //getting the search result\r\n        <div className=\"home-page\">\r\n            <ChangePageLinks prev_path={prev_page_path} next_path={next_page_path} page={page_no}/>\r\n            <div className=\"movies-container\">\r\n                {movies.map(movie=><MiniMovieDes key={movie.imdbID} data={movie}/>)}\r\n            </div>\r\n            <ChangePageLinks prev_path={prev_page_path} next_path={next_page_path} page={page_no}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchView;"]},"metadata":{},"sourceType":"module"}